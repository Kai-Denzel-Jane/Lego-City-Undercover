Timer scripttimer(0);
Character me(GetCharacter());

// exact copy of the pedestrian script but with the inclusion of the 'MakeAlien' command

state Base()
{
	Conditions
	{
		If( _AlwaysTrue("")== 1.0 ) { goto WanderSpline(); };
	};
	Actions
	{
		_SetZoneAbility("clear +A");
		_SetLocator("name=NULL");
		_ResetTimer("time=0.0");
		_MakeAlien("");
		_SetMessage("'name=My.ReleaseLocator' 'value=0.0'	");
	};
};

state ReleaseLocator()
{
	Conditions
	{
	};
	Actions
	{
		_SetLocator("name=NULL");
		_SetMessage("'name=My.ReleaseLocator' 'value=0.0'");
		goto WanderSpline();
	};
};

state WanderSpline()
{
	Conditions
	{
		if( _HasTakeOverObject("")> 0.0 ) { goto Traffic(); };
	//	if( _ShouldBeCulled("")> 0.0 ) { goto Kill(); };
		if( scripttimer> 2.0 AND _Message("My.ReleaseLocator")> 0.0 ) { goto ReleaseLocator(); };
	//	if( _FreeLocatorSetRangeXZ("Pedestrian_Idle")< 1.0 AND _Random("")< 0.003 ) { goto IdlingApproach(); };
//		If( _BeenHit("")= 1.0 ) { goto RunAwayFromPlayer(); };
	};
	Actions
	{
		_WanderOnNearestSystem("name=pedestrian walk");
	};
};

state IdlingApproach()
{
	Conditions
	{
//		If( _BeenHit("")= 1.0 ) { goto RunAwayFromPlayer(); };
	};
	Actions
	{
		_GetLocatorFromSet("'name=Pedestrian_Idle' 'ignore_assigned=TRUE'");
//		FaceLocator 'time=0.5'
		_GoToLocator("'walk' 'goalrange=0.001'");
		goto Idling();
	};
};

state Idling()
{
	Conditions
	{
//		If( _BeenHit("")= 1.0 ) { goto RunAwayFromPlayer(); };
	};
	Actions
	{
		_FaceLocatorDir("'time=0.5'");
		_ContextSetAnimation("'action=idle1' 'ncycles=1' 'wait_until_finished'");
		_ResetTimer("time=0.0");
		_SetMessage("'name=My.ReleaseLocator' 'value=1.0'");
		goto WanderSpline();
	};
};	



state RunAwayFromPlayer()
{
	Conditions
	{
		if( _NearestPlayerRange("")> 6.0 ) { goto WanderSpline(); };
	};
	Actions
	{
		_MoveAwayFromPlayer("7.0");
		_Setcurrentspeed("speed=run");
	};
};


state Traffic()
{
	Conditions
	{
	};
	Actions
	{
		_ChangeScript("Script=Traffic");
	};
};

state kill()
{
	Conditions
	{
	};
	Actions
	{
		_KILL("debris");
	};
};







Base();
